using NewTxtRPG.Entitys;
using NewTxtRPG.etc;

namespace NewTxtRPG.Scene
{
    internal class SanzPlayer
    {
        public static List<SanzPlayer> players { get; set; } = new List<SanzPlayer>();

        public int playerX { get; set; }
        public int playerY { get; set; }
        public float playerHP { get; set; }

        public SanzPlayer()
        {
            playerX = 83;
            playerY = 20;
            playerHP = 100;
        }
    }

    internal class SanzScene
    {
       static SanzPlayer player = new SanzPlayer();
       static readonly object consoleLock = new object();

        static string[] sans_umm_first = {
    "░░░░░░░░░░░░░░░░░░░▄██████████████████▄░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▄██████████████████████▄░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▄████████████████████████▄░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░███▀░░░░░▀█████▀░░░░░▀▀███░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░██░░░▄▄░░░█████░░▄▄░░░░░██░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█▄▄░▀▀░░░██░░█▄░▀▀░░▄▄██░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░████▀▀▄██░░░░██▄▀▀▀███░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░███░▀█████▄▄▄▄█████▀░▀██░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▀█▄▄▀░▄▄░▄▄░▄▄░▄▄░▄░███▀░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄▄░░▀███▄▄▀░██░██░█▀░▄███▀░▄▄▄▄░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░████▄░░▀████▄▄▄▄▄▄▄▄████▀░▄██▀░▄░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░▄▀░░▀▀▀▀▄░░░░░░░░░░░░░░░░░▄█▀▀░░░▀▄▄░░░░░░░░░░░░",
    "░░░░░░░░░░░▄▀░░░▄░░░░▀▄▄▄▄░▀████░░▄▄▄▄▀▀░░░▄░░░▀▄░░░░░░░░░░░",
    "░░░░░░░░░▄▀░░░░░█░░░░░█░░█░░▀▀▀▀░█▀█░░░░░░░█░░░░▀▄░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█░░░░░█░░█░████▄░█▄█░░░▄▄▄██░░░░░▀▄░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█▀░░░░░█░▄░█████░▄▄█░▄▀▀░░░█░░░░░░█░░░░░░░░░",
    "░░░░░░░░░█░░░░░█░░░░░░░█▀░░█████░░░█░█░░░░░░█░░░░░█░░░░░░░░░",
    "░░░░░░░░░▀▀▄▄░░█░░░░░░░▀▄▀░█████░▀█▄▀░░░░░░░█░░░▄▀▀░░░░░░░░░",
    "░░░░░░░░░░░░▀█░█▄▄░░░░░░█▄▄▄▄▄▄▄▄▄█░░░░░░░▄▄█▄▄▀░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░▀███▄▄▄▄▄▀▀▀▀░░░░░▀▀▀▀▀▀▀▀██░▀▀░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░▄░▄▄░░░░░░░░░░░░░░▄▄░░░░▄░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░▄█▀░░░░░░░▄░░░░░░██░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░██░░░░░░░░██░░░░░███░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░▄█░░░░░░░░▄█░█░░░░███░░░░░█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░██░░░░░░░░█░░█░░░░░██░░░░░█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▀▀██▄▄▄▄▄▄▄▄█░░█▄▄▄▄▄██▄▄▄▄▄█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄░░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄████▄▀████░░░░░░░░░░▄█████▀▄██▄▄░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░█████████░▄▄▄░░░░░░░░░▄▄▄▄▄░▄██████▀░░░░░░░░░░░"
};
        static string[] sans_umm_second = {
    "░░░░░░░░░░░░░░░░░░░▄██████████████████▄░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▄██████████████████████▄░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▄████████████████████████▄░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░███▀░░░░░▀█████▀░░░░░▀▀███░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░██░░░▄▄░░░█████░░▄▄░░░░░██░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█▄▄░▀▀░░░██░░█▄░▀▀░░▄▄██░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░████▀▀▄██░░░░██▄▀▀▀███░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░███░▀█████▄▄▄▄█████▀░▀██░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▀█▄▄▀░▄▄░▄▄░▄▄░▄▄░▄░███▀░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄▄░░▀███▄▄▀░██░██░█▀░▄███▀░▄▄▄▄░░░░░░░░░░░░░░░",
    "░▄████▄░░░▄▄░░████▄░░▀████▄▄▄▄▄▄▄▄████▀░▄██▀░▄░░▄▄░░░▄████▄░",
    "▀█████████▀░░▄░░▀▀▀▀▄░░░░░░░░░░░░░░░░░▄█▀▀░░░░█▄░▀█████████▀",
    "░░░░█░░░░░▄▄█░░░▄░░░░▀▄▄▄▄░▀████░░▄▄▄▄▀▀░░░▄▀░░░█▄▄░░░░█░░░░",
    "░░░░░█░░░░░▀░░░░█░░░░░█░░█░░▀▀▀▀░█▀█░░░░░░░█░░░░░▀░░░░█░░░░░",
    "░░░░░░▀▄░░░░░░░░█░░░░░█░░█░████▄░█▄█░░░▄▄▄██░░░░░░░░▄▀░░░░░░",
    "░░░░░░░░▀▄▄░░░░░█▀░░░░░█░▄░█████░▄▄█░▄▀▀░░░█░░░░░▄▄▀░░░░░░░░",
    "░░░░░░░░░░░▀▀▄▄█░░░░░░░█▀░░█████░░░█░█░░░░░░█▄▄▀▀░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░█░░░░░░░▀▄▀░█████░▀█▄▀░░░░░░░█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░█▄▄░░░░░░█▄▄▄▄▄▄▄▄▄█░░░░░░░▄▄█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░▀███▄▄▄▄▄▀▀▀▀░░░░░▀▀▀▀▀▀▀▀██░▀░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░▄░▄▄░░░░░░░░░░░░░░▄▄░░░░▄░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░▄█▀░░░░░░░▄░░░░░░██░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░██░░░░░░░░██░░░░░███░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░▄█░░░░░░░░▄█░█░░░░███░░░░░█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░██░░░░░░░░█░░█░░░░░██░░░░░█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▀▀██▄▄▄▄▄▄▄▄█░░█▄▄▄▄▄██▄▄▄▄▄█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄░░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄████▄▀████░░░░░░░░░░▄█████▀▄██▄▄░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░█████████░▄▄▄░░░░░░░░░▄▄▄▄▄░▄██████▀░░░░░░░░░░░"
};
        static string[] sans_angr = {
    "░░░░░░░░░░░░░░░░░░░▄██████████████████▄░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▄██████████████████████▄░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▄████████████████████████▄░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░███▀░░░░░▀█████▀░░░░░▀▀███░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░██░░░░░░░░█████░░░░░░░░░██░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█▄▄░░░░░░██░░█▄░░░░░▄▄██░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░████▀▀▄██░░░░██▄▀▀▀███░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░███░▀█████▄▄▄▄█████▀░▀██░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▀█▄▄▀░▄▄░▄▄░▄▄░▄▄░▄░███▀░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄▄░░▀███▄▄▀░██░██░█▀░▄███▀░▄▄▄▄░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░████▄░░▀████▄▄▄▄▄▄▄▄████▀░▄██▀░▄░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░▄▀░░▀▀▀▀▄░░░░░░░░░░░░░░░░░▄█▀▀░░░▀▄▄░░░░░░░░░░░░",
    "░░░░░░░░░░░▄▀░░░▄░░░░▀▄▄▄▄░▀████░░▄▄▄▄▀▀░░░▄░░░▀▄░░░░░░░░░░░",
    "░░░░░░░░░▄▀░░░░░█░░░░░█░░█░░▀▀▀▀░█▀█░░░░░░░█░░░░▀▄░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█░░░░░█░░█░████▄░█▄█░░░▄▄▄██░░░░░▀▄░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█▀░░░░░█░▄░█████░▄▄█░▄▀▀░░░█░░░░░░█░░░░░░░░░",
    "░░░░░░░░░█░░░░░█░░░░░░░█▀░░█████░░░█░█░░░░░░█░░░░░█░░░░░░░░░",
    "░░░░░░░░░▀▀▄▄░░█░░░░░░░▀▄▀░█████░▀█▄▀░░░░░░░█░░░▄▀▀░░░░░░░░░",
    "░░░░░░░░░░░░▀█░█▄▄░░░░░░█▄▄▄▄▄▄▄▄▄█░░░░░░░▄▄█▄▄▀░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░▀███▄▄▄▄▄▀▀▀▀░░░░░▀▀▀▀▀▀▀▀██░▀▀░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░▄░▄▄░░░░░░░░░░░░░░▄▄░░░░▄░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░▄█▀░░░░░░░▄░░░░░░██░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░██░░░░░░░░██░░░░░███░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░▄█░░░░░░░░▄█░█░░░░███░░░░░█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░██░░░░░░░░█░░█░░░░░██░░░░░█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▀▀██▄▄▄▄▄▄▄▄█░░█▄▄▄▄▄██▄▄▄▄▄█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄░░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄████▄▀████░░░░░░░░░░▄█████▀▄██▄▄░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░█████████░▄▄▄░░░░░░░░░▄▄▄▄▄░▄██████▀░░░░░░░░░░░"
};
        static string[] sans_angr_upper_first = {
    "░░░░░░░░░░░░░░░░░░░▄██████████████████▄░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▄██████████████████████▄░░░░░░░░░▄▄░░░░░░░░",
    "░░░░░░░░░░░░░░░░▄████████████████████████▄░░░░░░▄████▄░░░░░░",
    "░░░░░░░░░░░░░░░░███▀░░░░░▀█████▀░░░░░▀▀███░░░░░░██████▄░░░░░",
    "░░░░░░░░░░░░░░░░██░░░░░░░░█████░░░░░░░░░██░░░░░▄▀██████░░░░░",
    "░░░░░░░░░░░░░░░░░█▄▄░░░░░░██░░█▄░░░░░▄▄██░░░░░░██░█████░░░░░",
    "░░░░░░░░░░░░░░░░░░████▀▀▄██░░░░██▄▀▀▀███░░░░░░░▄██░████░░░░░",
    "░░░░░░░░░░░░░░░░░███░▀█████▄▄▄▄█████▀░▀██░░░░░█░███████▄░░░░",
    "░░░░░░░░░░░░░░░░░▀█▄▄▀░▄▄░▄▄░▄▄░▄▄░▄░███▀░░░░█░░░▀██▀░░█░░░░",
    "░░░░░░░░░░░░░░▄▄░░▀███▄▄▀░██░██░█▀░▄███▀░▄▄▄▄▄░░░░░░░░▄█░░░░",
    "░░░░░░░░░░░░░░████▄░░▀████▄▄▄▄▄▄▄▄████▀░▄██▀░░░░░▄▀▀▀▀██░░░░",
    "░░░░░░░░░░░░▄▀░░▀▀▀▀▄░░░░░░░░░░░░░░░░░▄█▀▀░░░░░░░░▄▄▄▀▀▀▄░░░",
    "░░░░░░░░░░░▄▀░░░▄░░░░▀▄▄▄▄░▀████░░▄▄▄▄▀▀░░░▄░░░░░▄░░░░░░█░░░",
    "░░░░░░░░░▄▀░░░░░█░░░░░█░░█░░▀▀▀▀░█▀█░░░░░░░█░░░░░░▄▀▀▀▀▀█░░░",
    "░░░░░░░░░█░░░░░░█░░░░░█░░█░████▄░█▄█░░░▄▄▄██░░░░░░░▄▄▄▄▄█▄░░",
    "░░░░░░░░░█░░░░░░█▀░░░░░█░▄░█████░▄▄█░▄▀▀░░░█░░░░░░▀░░░░▀▀█░░",
    "░░░░░░░░░█░░░░░█░░░░░░░█▀░░█████░░░█░█░░░░░░█░░░░░▄▄▄▄▄▄░█░░",
    "░░░░░░░░░▀▀▄▄░░█░░░░░░░▀▄▀░█████░▀█▄▀░░░░░░░█░░░░░▀▀▀▀▀███░░",
    "░░░░░░░░░░░░▀█░█▄▄░░░░░░█▄▄▄▄▄▄▄▄▄█░░░░░░░▄▄█░░░░▄▄▄▄▄▄░██░░",
    "░░░░░░░░░░░░░░░▀███▄▄▄▄▄▀▀▀▀░░░░░▀▀▀▀▀▀▀▀██░▀░░░░▀▀▀▀█████░░",
    "░░░░░░░░░░░░░░░░░░▄░▄▄░░░░░░░░░░░░░░▄▄░░░░▄░░░░░█████▄▄▀██░░",
    "░░░░░░░░░░░░░░░░░█░▄█▀░░░░░░░▄░░░░░░██░░░░░█░░▄███████████░░",
    "░░░░░░░░░░░░░░░░░█░██░░░░░░░░██░░░░░███░░░░█░███▀▀▀██████░░░",
    "░░░░░░░░░░░░░░░░█░▄█░░░░░░░░▄█░█░░░░███░░░░░█░░░░░░░▀███▀░░░",
    "░░░░░░░░░░░░░░░░█░██░░░░░░░░█░░█░░░░░██░░░░░█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▀▀██▄▄▄▄▄▄▄▄█░░█▄▄▄▄▄██▄▄▄▄▄█░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄░░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄████▄▀████░░░░░░░░░░▄█████▀▄██▄▄░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░█████████░▄▄▄░░░░░░░░░▄▄▄▄▄░▄██████▀░░░░░░░░░░░"
};
        static string[] sans_angr_upper_second = {
    "░░░░░░░░░░░░░░░░░░░▄██████████████████▄░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▄██████████████████████▄░░░░░░░░░░▄██▄░░░░░░",
    "░░░░░░░░░░░░░░░░▄████████████████████████▄░░░░░░░░██████░░░░░",
    "░░░░░░░░░░░░░░░░███▀░░░░░▀█████▀░░░░░▀▀███░░░░░░█▄▀█████░░░░░",
    "░░░░░░░░░░░░░░░░██░░░░░░░░█████░░░░░░░░░██░░░░░░████████░░░░░",
    "░░░░░░░░░░░░░░░░░█▄▄░░░░░░██░░█▄░░░░░▄▄██░░░░░░░█░░░░▀▀▄░░░░░",
    "░░░░░░░░░░░░░░░░░░████▀▀▄██░░░░██▄▀▀▀███░░░░░░░█░░░░░░▄▀░░░░░",
    "░░░░░░░░░░░░░░░░░███░▀█████▄▄▄▄█████▀░▀██░░░░░█░░░░░░░█░░░░░░",
    "░░░░░░░░░░░░░░░░░▀█▄▄▀░▄▄░▄▄░▄▄░▄▄░▄░███▀░░░▄▄░░░░░░░█░░░░░░░",
    "░░░░░░░░░░░░░░▄▄░░▀███▄▀▀░██░██░█▀░▄███▀░▄███▀▀░░░░░░█░░░░░░░",
    "░░░░░░░░░░░░░▄▀▀██▄░░▀███▄▄▄▄▄▄▄▄▄████▀▄███▀░░░░░░░░█░░░░░░░░",
    "░░░░░░░░░░░░█░░░▀▀▀▀▄░░░░░░░░░░░░░░░░░▄█░░░░░░░░░░░█░░░░░░░░░",
    "░░░░░░░░░░▄▀░░░░▄░░░░▀▄▀▀█░▀████░░▄▄▄▄▀▀░░░▄▀░░░░▄▀░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█░░░░░█░░█░░▀▀▀▀░█▀█░░░░░░░█░▄▄▀▀░░░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█░░░░░█░░█░████▄░█▄█░░░▄▄▄██░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█▀░░░░░█░▄░█████░▄▄█░▄▀▀░░░█▄░░░░░░░░░░░░░░░░",
    "░░░░░░░░░█▄░░░░█░░░░░░░█▀░░█████░░░█░█░░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░▀█▄░█░░░░░░░▀▄▀░█████░▀█▄▀░░░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░▀░█▄▄░░░░░░█▄▄▄▄▄▄▄▄▄█░░░░░░░▄▀▀░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░▀███▄▄▄▄▄▀▀▀▀░░░░░▀▀▀▀▀▀▀▀██░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░▄░▄▄░░░░░░░░░░░░░░▄▄░░░░▄░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░▄█▀░░░░░░░▄░░░░░░██░░░░░█░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░██░░░░░░░░██░░░░░███░░░░█░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░▄█░░░░░░░░▄█░█░░░░███░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░██░░░░░░░░█░░█░░░░░██░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▀▀██▄▄▄▄▄▄▄▄█░░█▄▄▄▄▄██▄▄▄▄▄█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄░░░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄████▄▀████░░░░░░░░░░▄█████▀▄██▄▄░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░█████████░▄▄▄░░░░░░░░░▄▄▄▄▄░▄██████▀░░░░░░░░░░░░"
};
        static string[] sans_closeeye = {
    "░░░░░░░░░░░░░░░░░░░▄██████████████████▄░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▄██████████████████████▄░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▄████████████████████████▄░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░██████████████████████████░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░████████▀░█████░▀████████░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█▄▄░░░░░░██░░█▄░░░░░▄▄██░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░████▀▀▄██░░░░██▄▀▀▀███░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░███░▀█████▄▄▄▄█████▀░███░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▀█▄▄▀░▄▄░▄▄░▄▄░▄▄░▄░███▀░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄▄░░▀███▄▄▀░██░██░█▀░▄███▀░▄▄▄▄░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░████▄░░▀████▄▄▄▄▄▄▄▄████▀░▄██▀░▄░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░▄▀░░▀▀▀▀▄░░░░░░░░░░░░░░░░░▄█▀▀░░░▀▄▄░░░░░░░░░░░░░",
    "░░░░░░░░░░░▄▀░░░▄░░░░▀▄▄▄▄░▀████░░▄▄▄▄▀▀░░░▄░░░▀▄░░░░░░░░░░░░",
    "░░░░░░░░░▄▀░░░░░█░░░░░█░░█░░▀▀▀▀░█▀█░░░░░░░█░░░░▀▄░░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█░░░░░█░░█░████▄░█▄█░░░▄▄▄██░░░░░▀▄░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█▀░░░░░█░▄░█████░▄▄█░▄▀▀░░░█░░░░░░█░░░░░░░░░░",
    "░░░░░░░░░█░░░░░█░░░░░░░█▀░░█████░░░█░█░░░░░░█░░░░░█░░░░░░░░░░",
    "░░░░░░░░░▀▀▄▄░░█░░░░░░░▀▄▀░█████░▀█▄▀░░░░░░░█░░░▄▀▀░░░░░░░░░░",
    "░░░░░░░░░░░░▀█░█▄▄░░░░░░█▄▄▄▄▄▄▄▄▄█░░░░░░░▄▄█▄▄▀░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░▀███▄▄▄▄▄▀▀▀▀░░░░░▀▀▀▀▀▀▀▀██░▀▀░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░▄░▄▄░░░░░░░░░░░░░░▄▄░░░░▄░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░▄█▀░░░░░░░▄░░░░░░██░░░░░█░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░██░░░░░░░░██░░░░░███░░░░█░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░▄█░░░░░░░░▄█░█░░░░███░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░██░░░░░░░░█░░█░░░░░██░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▀▀██▄▄▄▄▄▄▄▄█░░█▄▄▄▄▄██▄▄▄▄▄█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄░░░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄████▄▀████░░░░░░░░░░▄█████▀▄██▄▄░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░█████████░▄▄▄░░░░░░░░░▄▄▄▄▄░▄██████▀░░░░░░░░░░░░"
};
        static string[] sans_angry_first = {
    "░░░░░░░░░░░░░░░░░░░▄██████████████████▄░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▄██████████████████████▄░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▄████████████████████████▄░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░███▀░░░░░▀█████▀░▄▄▄░▀▀███░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░██░░░░░░░░█████░██░██░░░██░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█▄▄░░░░░░██░░█▄░▀▀▀░▄▄██░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░████▀▀▄██░░░░██▄▀▀▀███░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░███░▀█████▄▄▄▄█████▀░███░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▀█▄▄▀░▄▄░▄▄░▄▄░▄▄░▄░███▀░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄▄░░▀███▄▀▀░██░██░█▀░▄███▀░▄▄▄▄░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░████▄░░▀███▄▄▄▄▄▄▄▄▄████▀░▄██▀░▄░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░▄▀░░▀▀▀▀▄░░░░░░░░░░░░░░░░░▄█▀▀░░░▀▄▄░░░░░░░░░░░░░",
    "░░░░░░░░░░░▄▀░░░▄░░░░▀▄▄▄▄░▀████░░▄▄▄▄▀▀░░░▄░░░▀▄░░░░░░░░░░░░",
    "░░░░░░░░░▄▀░░░░░█░░░░░█░░█░░▀▀▀▀░█▀█░░░░░░░█░░░░▀▄░░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█░░░░░█░░█░████▄░█▄█░░░▄▄▄██░░░░░▀▄░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█▀░░░░░█░▄░█████░▄▄█░▄▀▀░░░█░░░░░░█░░░░░░░░░░",
    "░░░░░░░░░█░░░░░█░░░░░░░█▀░░█████░░░█░█░░░░░░█░░░░░█░░░░░░░░░░",
    "░░░░░░░░░▀▀▄▄░░█░░░░░░░▀▄▀░█████░▀█▄▀░░░░░░░█░░░▄▀▀░░░░░░░░░░",
    "░░░░░░░░░░░░▀█░█▄▄░░░░░░█▄▄▄▄▄▄▄▄▄█░░░░░░░▄▄█▄▄▀░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░▀███▄▄▄▄▄▀▀▀▀░░░░░▀▀▀▀▀▀▀▀██░▀▀░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░▄░▄▄░░░░░░░░░░░░░░▄▄░░░░▄░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░▄█▀░░░░░░░▄░░░░░░██░░░░░█░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░██░░░░░░░░██░░░░░███░░░░█░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░▄█░░░░░░░░▄█░█░░░░███░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░██░░░░░░░░█░░█░░░░░██░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▀▀██▄▄▄▄▄▄▄▄█░░█▄▄▄▄▄██▄▄▄▄▄█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄░░░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄████▄▀████░░░░░░░░░░▄█████▀▄██▄▄░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░█████████░▄▄▄░░░░░░░░░▄▄▄▄▄░▄██████▀░░░░░░░░░░░░"
};
        static string[] sans_angry_second = {
    "░░░░░░░░░░░░░░░░░░░▄██████████████████▄░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▄██████████████████████▄░░░░░░░░░░▄██▄░░░░░░",
    "░░░░░░░░░░░░░░░░▄████████████████████████▄░░░░░░░░██████░░░░░",
    "░░░░░░░░░░░░░░░░███▀░░░░░▀█████▀░▄▄▄░▀▀███░░░░░░█▄▀█████░░░░░",
    "░░░░░░░░░░░░░░░░██░░░░░░░░█████░██░██░░░██░░░░░░████████░░░░░",
    "░░░░░░░░░░░░░░░░░█▄▄░░░░░░██░░█▄░▀▀▀░▄▄██░░░░░░░█░░░░▀▀▄░░░░░",
    "░░░░░░░░░░░░░░░░░░████▀▀▄██░░░░██▄▀▀▀███░░░░░░░█░░░░░░▄▀░░░░░",
    "░░░░░░░░░░░░░░░░░███░▀█████▄▄▄▄█████▀░███░░░░░█░░░░░░░█░░░░░░",
    "░░░░░░░░░░░░░░░░░▀█▄▄▀░▄▄░▄▄░▄▄░▄▄░▄░███▀░░░▄▄░░░░░░░█░░░░░░░",
    "░░░░░░░░░░░░░░▄▄░░▀███▄▀▀░██░██░█▀░▄███▀░▄███▀▀░░░░░░█░░░░░░░",
    "░░░░░░░░░░░░░▄▀▀██▄░░▀███▄▄▄▄▄▄▄▄▄████▀▄███▀░░░░░░░░█░░░░░░░░",
    "░░░░░░░░░░░░█░░░▀▀▀▀▄░░░░░░░░░░░░░░░░░▄█░░░░░░░░░░░█░░░░░░░░░",
    "░░░░░░░░░░▄▀░░░░▄░░░░▀▄▀▀█░▀████░░▄▄▄▄▀▀░░░▄▀░░░░▄▀░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█░░░░░█░░█░░▀▀▀▀░█▀█░░░░░░░█░▄▄▀▀░░░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█░░░░░█░░█░████▄░█▄█░░░▄▄▄██░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█▀░░░░░█░▄░█████░▄▄█░▄▀▀░░░█▄░░░░░░░░░░░░░░░░",
    "░░░░░░░░░█▄░░░░█░░░░░░░█▀░░█████░░░█░█░░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░▀█▄░█░░░░░░░▀▄▀░█████░▀█▄▀░░░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░▀░█▄▄░░░░░░█▄▄▄▄▄▄▄▄▄█░░░░░░░▄▀▀░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░▀███▄▄▄▄▄▀▀▀▀░░░░░▀▀▀▀▀▀▀▀██░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░▄░▄▄░░░░░░░░░░░░░░▄▄░░░░▄░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░▄█▀░░░░░░░▄░░░░░░██░░░░░█░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░█░██░░░░░░░░██░░░░░███░░░░█░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░▄█░░░░░░░░▄█░█░░░░███░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░█░██░░░░░░░░█░░█░░░░░██░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▀▀██▄▄▄▄▄▄▄▄█░░█▄▄▄▄▄██▄▄▄▄▄█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄░░░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄████▄▀████░░░░░░░░░░▄█████▀▄██▄▄░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░█████████░▄▄▄░░░░░░░░░▄▄▄▄▄░▄██████▀░░░░░░░░░░░░"
};
        static string[] sans_angry_third = {
    "░░░░░░░░░░░░░░░░░░░▄██████████████████▄░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▄██████████████████████▄░░░░░░░░░▄▄░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▄████████████████████████▄░░░░░░▄████▄░░░░░░░",
    "░░░░░░░░░░░░░░░░███▀░░░░░▀█████▀░▄▄▄░▀▀███░░░░░░██████▄░░░░░░",
    "░░░░░░░░░░░░░░░░██░░░░░░░░█████░██░██░░░██░░░░░▄▀██████░░░░░░",
    "░░░░░░░░░░░░░░░░░█▄▄░░░░░░██░░█▄░▀▀▀░▄▄██░░░░░░██░█████░░░░░░",
    "░░░░░░░░░░░░░░░░░░████▀▀▄██░░░░██▄▀▀▀███░░░░░░░▄██░████░░░░░░",
    "░░░░░░░░░░░░░░░░░███░▀█████▄▄▄▄█████▀░███░░░░░█░███████▄░░░░░",
    "░░░░░░░░░░░░░░░░░▀█▄▄▀░▄▄░▄▄░▄▄░▄▄░▄░███▀░░░░█░░░▀██▀░░█░░░░░",
    "░░░░░░░░░░░░░░▄▄░░▀███▄▀▀░██░██░█▀░▄███▀░▄▄▄▄▄░░░░░░░░▄█░░░░░",
    "░░░░░░░░░░░░░█▀▀██▄░░▀███▄▄▄▄▄▄▄▄▄████▀░▄██▀░░░░░▄▀▀▀▀██░░░░░",
    "░░░░░░░░░░░░▄▀░░▀▀▀▀▄░░░░░░░░░░░░░░░░░▄█▀▀░░░░░░░░▄▄▄▀▀▀▄░░░░",
    "░░░░░░░░░░░▄▀░░░▄░░░░▀▄▄▄▄░▀████░░▄▄▄▄▀▀░░░▄░░░░░▄░░░░░░█░░░░",
    "░░░░░░░░░▄▀░░░░░█░░░░░█░░█░░▀▀▀▀░█▀█░░░░░░░█░░░░░░▄▀▀▀▀▀█░░░░",
    "░░░░░░░░░█░░░░░░█░░░░░█░░█░████▄░█▄█░░░▄▄▄██░░░░░░░▄▄▄▄▄█▄░░░",
    "░░░░░░░░░█░░░░░░█▀░░░░░█░▄░█████░▄▄█░▄▀▀░░░█░░░░░░▀░░░░▀▀█░░░",
    "░░░░░░░░░█░░░░░█░░░░░░░█▀░░█████░░░█░█░░░░░░█░░░░░▄▄▄▄▄▄░█░░░",
    "░░░░░░░░░▀▀▄▄░░█░░░░░░░▀▄▀░█████░▀█▄▀░░░░░░░█░░░░░▀▀▀▀▀███░░░",
    "░░░░░░░░░░░░▀█░█▄▄░░░░░░█▄▄▄▄▄▄▄▄▄█░░░░░░░▄▄█░░░░▄▄▄▄▄▄░██░░░",
    "░░░░░░░░░░░░░░░▀███▄▄▄▄▄▀▀▀▀░░░░░▀▀▀▀▀▀▀▀██░▀░░░░▀▀▀▀█████░░░",
    "░░░░░░░░░░░░░░░░░░▄░▄▄░░░░░░░░░░░░░░▄▄░░░░▄░░░░░█████▄▄▀██░░░",
    "░░░░░░░░░░░░░░░░░█░▄█▀░░░░░░░▄░░░░░░██░░░░░█░░▄███████████░░░",
    "░░░░░░░░░░░░░░░░░█░██░░░░░░░░██░░░░░███░░░░█░███▀▀▀██████░░░░",
    "░░░░░░░░░░░░░░░░█░▄█░░░░░░░░▄█░█░░░░███░░░░░█░░░░░░░▀███▀░░░░",
    "░░░░░░░░░░░░░░░░█░██░░░░░░░░█░░█░░░░░██░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▀▀██▄▄▄▄▄▄▄▄█░░█▄▄▄▄▄██▄▄▄▄▄█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄░░░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄████▄▀████░░░░░░░░░░▄█████▀▄██▄▄░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░█████████░▄▄▄░░░░░░░░░▄▄▄▄▄░▄██████▀░░░░░░░░░░░░"
};
        static string[] sans_angry_fourth = {
    "░░░░░░░░░░░░░░░░░░░░▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄░░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░▄████████████████████▄░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░████████████████████████░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░████▀▀▀▀▀███████▀▀▀▀▀█████░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░██▀░░░░░░░█████░▄█▀█▄░░▀██░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▀█░░░░░░░░██▀▀█░▀█▄█▀░░▄█▀░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▀██▄▄▄▄░▄█▀░░▀█▄░▄▄▄███▀░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░▄██▀█▄▄███░░░░███▄▄▄▀██▄░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░███░▄▀▀▀▀▀▀▀▀▀▀▀▀▀▀░▄███░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░███▄░██░██░██░██░▀▄███░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄▄▄▄░▀▀██▄▄░▀▀░▀▀░▀░▄████░░▄▄▄▄▄░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░▄▄▀▀▀▀▀▄░▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▄▄██▀░░░░▀▄░░░░░░░░░░░░",
    "░░░░░░░░░░░▄▀░░░▄░░░░▀▄▄▄▄░▀████░░▄▄▄▄▀▀░░░▄░░░░▀▄░░░░░░░░░░░",
    "░░░░░░░░░▄▀░░░░░█░░░░░█░░█░░▀▀▀▀░█▀█░░░░░░░█░░░░░▀▄░░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█░░░░░█░░█░████▄░█▄█░░░▄▄▄██░░░░░░▀▄░░░░░░░░░",
    "░░░░░░░░░█░░░░░░█▀░░░░░█░▄░█████░▄▄█░▄▀▀░░░█░░░░░░░█░░░░░░░░░",
    "░░░░░░░░░█░░░░░█░░░░░░░█▀░░█████░░░█░█░░░░░░█░░░░░░█░░░░░░░░░",
    "░░░░░░░░░▀▀▄▄░░█░░░░░░░▀▄▀░█████░▀█▄▀░░░░░░░█░░░░░░░█░░░░░░░░",
    "░░░░░░░░░░░░▀█░█▄▄░░░░░░█▄▄▄▄▄▄▄▄▄█░░░░░░░▄▄█░░░░░░░█░░░░░░░░",
    "░░░░░░░░░░░░░░░▀███▄▄▄▄▄▀▀▀▀░░░░░▀▀▀▀▀▀▀▀██░░░▄░░░░░░█░░░░░░░",
    "░░░░░░░░░░░░░░░░░░▄░▄▄░░░░░░░░░░░░░░▄▄░░░░▄░░░█▄▄▄▄███▄▄░░░░░",
    "░░░░░░░░░░░░░░░░░█░▄█▀░░░░░░░▄░░░░░░██░░░░░█░░▄██████████▄░░░",
    "░░░░░░░░░░░░░░░░░█░██░░░░░░░░██░░░░░███░░░░█░░▀▀▀░░▀██████░░░",
    "░░░░░░░░░░░░░░░░█░▄█░░░░░░░░▄█░█░░░░███░░░░░█░░░░░░░░░▀▀▀░░░░",
    "░░░░░░░░░░░░░░░░█░██░░░░░░░░█░░█░░░░░██░░░░░█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░▀▀██▄▄▄▄▄▄▄▄█░░█▄▄▄▄▄██▄▄▄▄▄█░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄░░░░░░░░░░░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░░▄████▄▀████░░░░░░░░░░▄█████▀▄██▄▄░░░░░░░░░░░░░░",
    "░░░░░░░░░░░░░█████████░▄▄▄░░░░░░░░░▄▄▄▄▄░▄██████▀░░░░░░░░░░░░"
};
        static string[] gaster_Main =
        {
            "░░░░░░░░░██░░░░░░░░░",
            "░░░░▄▀░░████░░▀▄░░░░",
            "░░░▄█░░██████░░█▄░░░",
            "░░▄██▄████████▄██▄░░",
            "░░████▀██░░██▀████░░",
            "░░░▀█░▀██░░██▀░█▀░░░",
            "░░░░▀░█░█░░█░█░▀░░░░",
            "░░▄░░░░▄▀░░▀▄░░░░▄░░",
            "░░░▀▄░░█░██░█░░▄▀░░░",
            "░░░░██░██▄▄██░██░░░░",
            "░░░░░▀█░█▀▀█░█▀░░░░░",
            "░░░░░░░▀▄░░▄▀░░░░░░░",
            "░░░░░░░░░▀▀░░░░░░░░░"
        };
        static string[] gaster_Att =
        {
            "░░░░░░░░░██░░░░░░░░░",
            "░░░░▄▀░░████░░▀▄░░░░",
            "░░░▄█░░██████░░█▄░░░",
            "░░▄██▄████████▄██▄░░",
            "░░████▀██░░██▀████░░",
            "░░░▀█░▀██░░██▀░█▀░░░",
            "░░░░▀░█░█░░█░█░▀░░░░",
            "░░█░░░░▄▀░░▀▄░░░░█░░",
            "░░▀▄░░░█░██░█░░░▄▀░░",
            "░░░██░░██▄▄██░░██░░░",
            "░░░▀█▀▀▀▀▀▀▀▀▀▀█▀░░░",
            "░░░░█░████████░█░░░░",
            "░░░░░░████████░░░░░░",
            "░░░░░░████████░░░░░░",
        };
        static string[] born_att =
        {           
            "▄ ▄",
            " █ "
        };

        public void SanzBattle()
        {
            SanzScene program = new SanzScene();

            ConsoleKey con;

            int nullX = 0;
            int nullY = 0;
            int check_chat = -1;

            bool firstPase = false;
            bool battles = true;

            bool eventOne = true;
            bool eventTwo = true;

            Console.Clear();
            Console.SetCursorPosition(0, 0);

            Console.OutputEncoding = System.Text.Encoding.UTF8;
            Console.CursorVisible = false;
            

            //맨처음 출력
            foreach (string a in sans_closeeye)
                RenderConsole.WriteLine(a.Replace('░', ' '), ConsoleColor.White);
            
            CreateBox();

            Console.SetCursorPosition(player.playerX, player.playerY);
            RenderConsole.Write("♥", ConsoleColor.Red);

            
            while (true)
            {
                int delay = 80;
                string tex = "";

                switch (check_chat)
                {
                    case -1: tex = "..."; break;
                    case 0: tex = "정말 아름다운 날이야\n"; break;
                    case 1: tex = "새들은 지저귀고, 꽃들은 피어나고..\n"; break;
                    case 2: tex = "이런 날엔, 너 같은 칩입자들은..\n"; break;
                    case 3: tex = "지옥에서 불타야 해\n";
                        Console.SetCursorPosition(0, 0);
                        foreach (string a in sans_angr)
                            RenderConsole.WriteLine(a.Replace('░', ' '), ConsoleColor.White);
                        delay = 130;
                        break;
                }
                Console.SetCursorPosition(60, 0);
                foreach (char c in tex)
                {
                    if(check_chat == 3)
                        RenderConsole.Write(c.ToString(),ConsoleColor.Red);
                    else
                        RenderConsole.Write(c.ToString(), ConsoleColor.White);
                    Thread.Sleep(delay);
                }
                check_chat++;
                Thread.Sleep(1200);
                Console.SetCursorPosition(60, 0);
                RenderConsole.Write("                                             ");
                if (check_chat > 3) break;

            }
            Console.SetCursorPosition(0, 0);
            
           
            //움직이는거랑 샌즈 공격이랑 같이 그리면 오류생기므로 쓰레드로 관리
            if (battles)
            {

                //대화와 동시에 움직임 오류가 나는듯함
                //이 이상으로 쓰레드로 처리하기에는 작업이 복잡해짐
                /*
                new Thread(() =>
            {
                while (true)
                {
                    if (!eventOne)

                    {
                        if (Console.KeyAvailable)
                        {
                            con = Console.ReadKey(true).Key;

                            nullX = player.playerX;
                            nullY = player.playerY;

                            switch (con)
                            {
                                case ConsoleKey.LeftArrow:
                                    player.playerX--;
                                    break;
                                case ConsoleKey.RightArrow:
                                    player.playerX++;
                                    break;
                                case ConsoleKey.UpArrow:
                                    player.playerY--;
                                    break;
                                case ConsoleKey.DownArrow:
                                    player.playerY++;
                                    break;
                            }

                            player.playerX = player.playerX < 72 ? 72 : player.playerX;
                            player.playerX = player.playerX > 94 ? 94 : player.playerX;
                            player.playerY = player.playerY < 15 ? 15 : player.playerY;
                            player.playerY = player.playerY > 25 ? 25 : player.playerY;



                        }

                        lock (consoleLock)
                        {
                            Console.SetCursorPosition(nullX, nullY);
                            RenderConsole.Write(" ");
                        }

                        DrawHeart();
                        Thread.Sleep(100);
                    }
                }
            }).Start();
                */

                if (!firstPase)
                {
                    Thread.Sleep(2000);
                    firstPase = true;
                    new Thread(() =>
                    {
                        program.Pattern_zero();

                        Thread.Sleep(1200);
                        Console.Clear();
                        eventOne = false;

                        /*
                        //위치 재지정
                        CreateBox();

                        foreach (string a in sans_angr)
                            RenderConsole.WriteLine(a.Replace('░', ' '), ConsoleColor.White);

                        Thread.Sleep(4000);
                        */
                        firstPase = true;
                    }).Start();

                }
            }

            check_chat = -1;
            while (true)
            {
                
                if (!eventOne & eventTwo)
                {
                    Console.Clear();
                    Console.SetCursorPosition(0, 0);
                    eventTwo = false;

                    CreateBox();
                    DrawHeart();
                    while (true)
                    {
                        int delay = 300;
                        string tex = "";

                        switch (check_chat)
                        {
                            case -1: tex = "흠.";
                                Console.SetCursorPosition(0, 0);
                                foreach (string a in sans_umm_first)
                                    RenderConsole.WriteLine(a.Replace('░', ' '), ConsoleColor.White);
                                Thread.Sleep(1500);
                                break; ;
                            case 0: tex = "왜 다들 처음부터 강한 공격을 쓰지 않는지 모르겠다니까";
                                Console.SetCursorPosition(0, 0);
                                foreach (string a in sans_umm_second)
                                    RenderConsole.WriteLine(a.Replace('░', ' '), ConsoleColor.White);
                                delay = 40;
                                break;
                        }
                        Console.SetCursorPosition(60, 0);
                        foreach (char c in tex)
                        {
                            RenderConsole.Write(c.ToString(), ConsoleColor.White);
                            Thread.Sleep(delay);
                        }
                        check_chat++;
                        Thread.Sleep(1200);
                        Console.SetCursorPosition(60, 0);
                        if (check_chat > 0) break;
                        RenderConsole.Write("                                             ");
                        

                    }

                    Console.SetCursorPosition(60, 3);
                    RenderConsole.Write("< 선택 >", ConsoleColor.White);
                    Console.SetCursorPosition(60, 5);
                    RenderConsole.Write("1. 대화", ConsoleColor.White);
                    Console.SetCursorPosition(60, 6);
                    RenderConsole.Write("2. 공격", ConsoleColor.Red);
                    

                    while(true)
                    {
                        Console.SetCursorPosition(60, 8);
                        string answer = Console.ReadLine();
                        switch (answer)
                        {
                            case "1":
                                Console.SetCursorPosition(60, 8);
                                RenderConsole.Write("당신은 자비를 구했습니다");
                                Console.SetCursorPosition(60, 9);
                                RenderConsole.Write("< 아이템 획득 >", ConsoleColor.Blue);
                                Thread.Sleep(3000);
                                Player.Inventory.AddItem(Items.ItemList.First(x => x.Name == "뼈다귀"));
                                break ;
                            case "2":
                                Console.SetCursorPosition(60, 8);
                                RenderConsole.Write("당신은 죄악이 등을 타고 오르는 것을 느꼈다", ConsoleColor.Red);
                                Console.SetCursorPosition(60, 9);
                                RenderConsole.Write("< 패널티 발생 >", ConsoleColor.Red);
                                Console.SetCursorPosition(60, 10);
                                RenderConsole.Write("골드 & 경험치 0", ConsoleColor.White);
                                Player.Exp = 0;
                                Player.Gold = 0;
                                Thread.Sleep(3000);
                                break;
                            default:
                                Console.SetCursorPosition(60, 8);
                                RenderConsole.Write("         ");
                                continue;
                        }
                        break;

                    }
                    
                }
                if(!eventTwo)break;
            }
        }


        static void CreateBox()
        {
            lock (consoleLock)
            {
                Console.SetCursorPosition(70, 14);
                RenderConsole.Write(new string('█', 27));

                for (int i = 1; i < 12; i++)
                {
                    Console.SetCursorPosition(70, 14 + i);
                    RenderConsole.Write("██" + new string(' ', 23) + "██");
                }
                Console.SetCursorPosition(70, 26);
                RenderConsole.Write(new string('█', 27));
                Console.SetCursorPosition(0, 0);
            }
        }

        static void DrawHeart(bool color = true)
        {
            lock (consoleLock)
            {
                Console.SetCursorPosition(player.playerX, player.playerY);
                if(color)
                    RenderConsole.Write("♥", ConsoleColor.Red);
                else
                    RenderConsole.Write("♥", ConsoleColor.Blue); 
            }
        }

        void Pattern_zero()
        {
            int a = 0;
            Draw(sans_angry_first,0);
            DrawHeart();
            Thread.Sleep(200);

            Draw(sans_angry_first, 1);
            DrawHeart();
            Thread.Sleep(200);

            Draw(sans_angry_second, 0);
            DrawHeart();
            Thread.Sleep(200);

            Draw(sans_angry_third, 1,2);
            DrawHeart();
            Thread.Sleep(30);

            Draw(sans_angry_fourth, 1, 1);
            DrawHeart();
            Thread.Sleep(200);
            
            Draw(sans_angr_upper_first, 0, 3);
            Thread.Sleep(30);
            DrawHeart();

            Draw(sans_angr_upper_second, 1);
            DrawHeart();
            Thread.Sleep(700);

            Draw(sans_angr, 1);
            DrawHeart();
            Thread.Sleep(500);

            DrawGaster(gaster_Main);
            DrawHeart();
            Thread.Sleep(700);
            DrawGaster(gaster_Att,true);
            DrawHeart();

        }

        void DrawGaster(string[] name,bool att = false)
        {
            lock (consoleLock)
            {
                var Eyes = new List<(int x, int y)>
                {
                    (6,6),(13,6)
                };

                Console.SetCursorPosition(0, 0);
                for (int i = 0; i < name.Length; i++)
                {
                    Console.SetCursorPosition(64, i);
                    RenderConsole.Write(name[i].Replace('░', ' '), ConsoleColor.White);
                }

                for (int i = 0; i < name.Length; i++)
                {
                    Console.SetCursorPosition(83, i);
                    RenderConsole.Write(name[i].Replace('░', ' '), ConsoleColor.White);
                }

                if (att)
                {
                    for (int i = 0; i < 16; i++)
                    {
                        Console.SetCursorPosition(70, 14 + i);
                        RenderConsole.Write("████████");
                    }

                    for (int i = 0; i < 16; i++)
                    {
                        Console.SetCursorPosition(89, 14 + i);
                        RenderConsole.Write("████████");
                    }

                }

                Console.ForegroundColor = ConsoleColor.Cyan;

                foreach (var pos in Eyes)
                {
                    int x = pos.x + 64;
                    int y = pos.y ;

                    Console.SetCursorPosition(x, y);
                    char c = name[y][pos.x] == '░' ? ' ' : name[y][pos.x];
                    if (c != ' ')
                    {
                        Console.Write(c);
                    }
                }

                foreach (var pos in Eyes)
                {
                    int x = pos.x + 83;
                    int y = pos.y;

                    Console.SetCursorPosition(x, y);
                    char c = name[y][pos.x] == '░' ? ' ' : name[y][pos.x];
                    if (c != ' ')
                    {
                        Console.Write(c);
                    }
                }
                Console.ResetColor();


            }
        }
        void Draw(string[] name , int color,int control = 0 )
        {
            lock (consoleLock)
            {
                CreateBox();

                Console.SetCursorPosition(0, 0);
                var Eyes = new List<(int x, int y)>();

                if (control == 0)
                {
                    Eyes = new List<(int x, int y)>
                {
                  (33, 3), (34, 3), (35, 3),
                  (32, 4), (33 , 4), (35, 4), (36 , 4),
                  (33, 5), (34 , 5), (35 , 5)
                };

                }
                else
                {
                    Eyes = new List<(int x, int y)>
                {
                  (32, 4), (33 , 4),(34, 4), (35, 4), (36 , 4),
                  (32, 5), (33 , 5),(34, 5), (35 , 5),(36 , 5)
                };

                    //플레이어 위치 이동 1
                    if (control == 2)
                    {
                        for (int z = 0; z < 5; z++)
                        {
                            player.playerY++;
                            DrawHeart(false);
                            Console.SetCursorPosition(player.playerX, player.playerY - 1);
                            RenderConsole.Write(" ");

                            if (player.playerY > 25)
                            {
                                player.playerY = 25;
                                break;
                            }
                            Thread.Sleep(50);

                        }
                    }
                }

                Console.SetCursorPosition(0, 0);

                foreach (string a in name)
                    RenderConsole.WriteLine(a.Replace('░', ' '), ConsoleColor.White);

                if (color == 0)
                    Console.ForegroundColor = ConsoleColor.Yellow;
                else
                    Console.ForegroundColor = ConsoleColor.Cyan;

                foreach (var pos in Eyes)
                {

                    int x = pos.x;
                    int y = pos.y;

                    Console.SetCursorPosition(x, y);
                    char c = name[y][pos.x] == '░' ? ' ' : name[y][pos.x];
                    if (c != ' ')
                    {
                        Console.Write(c);
                    }
                }
                Console.ResetColor();

                //플레이어 위치 이동 2

                if (control == 3)
                {
                    for (int z = 0; z < 6; z++)
                    {
                        player.playerY--;
                        DrawHeart(false);
                        Console.SetCursorPosition(player.playerX, player.playerY + 1);
                        RenderConsole.Write(" ");

                        if (player.playerY < 19)
                        {
                            player.playerY = 19;
                            break;
                        }
                        Thread.Sleep(50);
                    }

                    /*
                    new Thread(() =>
                    {

                        for (int z = 0; z < born_att.Length; z++)
                        {
                            Console.SetCursorPosition(73, 24 + z);
                            RenderConsole.WriteLine(born_att[z]);
                        }

                    }).Start();
                    */

                }
            }
        }



        

    }


}
